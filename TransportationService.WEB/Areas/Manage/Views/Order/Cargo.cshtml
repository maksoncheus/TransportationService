@model TransportationService.WEB.Helpers.PaginatedList<TransportationService.WEB.Data.Entities.CargoOrder>
@using Microsoft.AspNetCore.Identity
@using TransportationService.WEB.Data
@using TransportationService.WEB.Data.Entities
@using TransportationService.WEB.Data.Enums
@inject ApplicationDbContext<User> context
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Найти по номеру телефона заказчика или уникальному номеру заказа: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Поиск" class="btn main_accent" /> |
            <a class="link_secondary" asp-action="Index">Вернуться к полному списку</a>
        </p>
    </div>
</form>
<div class="container">
    <div class="row justify-content-center">
        @foreach (CargoOrder order in Model.OrderByDescending(o => o.TimeStamp))
        {
            <div class="col-md-3 mx-1 my-1 bg-secondary bg-opacity-10 user border-1 border-top border-bottom border-start border-end border-secondary" data-id="@order.Number">
                @{
                    string status = order.Status switch
                    {
                        (Status)0 => "Отменен компанией",
                        (Status)1 => "Отменен пользователем",
                        (Status)2 => "Получен организацией",
                        (Status)3 => "Одобрен организацией",
                        (Status)4 => "В работе",
                        (Status)5 => "Доставлен",
                        _ => "Не удалось получить статус"
                    };
                }
                <div class="row">
                    <article class="card bg-transparent">
                        <div class="card-body bg-transparent">
                            <h6>Номер заказа: @order.Number</h6>
                            <article class="card bg-transparent">
                                <div class="card-body row bg-transparent">
                                    <div class="col"> <strong>Груз: </strong> <br>@order.Cargo.Name | @order.Weight кг</div>
                                </div>
                            </article>
                            <article class="card bg-transparent">
                                <div class="card-body row bg-transparent">
                                    <div class="col"> <strong>Адрес:</strong> <br>@order.DeliveryAddress</div>
                                    <div class="col"> <strong>Цена:</strong> <br>@order.Price</div>
                                </div>
                            </article>
                            <article class="card bg-transparent">
                                <div class="card-body row bg-transparent">
                                    <div class="col"> <strong>Ожидаемое время получения:</strong> <br>@order.DeliveryDate @(order.DeliveryMinTime)-@(order.DeliveryMaxTime)</div>
                                    <div class="col row row-cols-1">
                                        <div class="col"><strong>Статус:</strong> <br> @status</div>
                                        @{
                                            string buttonClass = string.Empty;
                                            string buttonContent = string.Empty;
                                            switch (order.Status)
                                            {
                                                case (Status)0:
                                                    {
                                                        buttonClass = "closed";
                                                        buttonContent = "";
                                                        break;
                                                    }
                                                case (Status)1:
                                                    {
                                                        buttonClass = "closed";
                                                        buttonContent = "";
                                                        break;
                                                    }
                                                case (Status)2:
                                                    {
                                                        buttonClass = "gotten";
                                                        buttonContent = "Одобрить";
                                                        break;
                                                    }
                                                case (Status)3:
                                                    {
                                                        buttonClass = "approved";
                                                        buttonContent = "\"В работе\"";
                                                        break;
                                                    }
                                                case (Status)4:
                                                    {
                                                        buttonClass = "work";
                                                        buttonContent = "Завершить";
                                                        break;
                                                    }
                                                case (Status)5:
                                                    {
                                                        buttonClass = "completed";
                                                        buttonContent = "";
                                                        break;
                                                    }
                                            };
                                        }
                                        @if ((int)order.Status == 2 || (int)order.Status == 3 || (int)order.Status == 4)
                                        {
                                        <div class="col"><button class="btn main_accent @buttonClass">@buttonContent</button></div>
                                        }
                                    </div>
                                </div>
                            </article>
                            @if ((int)order.Status == 2 || (int)order.Status == 3)
                            {
                                <article class="card bg-transparent">
                                    <div class="card-body row bg-transparent">
                                        <button class="btn btn-danger delete">Отклонить заказ</button>
                                    </div>
                                </article>
                            }
                        </div>
                    </article>
                </div>
            </div>
        }
    </div>
    <div class="row justify-content-center mt-3">
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn secondary_accent col-md-1 mx-1 @prevDisabled">
            Назад
        </a>
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn secondary_accent col-md-1 mx-1 @nextDisabled">
            Далее
        </a>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/order.js"></script>
}